<html><head>
	<meta http-equiv="Content-Type" content="text/html">
	<meta name="Generator" content="EmbPerl">
	<meta name="Originator" content="Vim">
	
	<title>Bash &amp; Windows</title><link rel="stylesheet" type="text/css" href="bash_files/fvu.html"></head>
<body>
<p class="title">Bash &amp; Windows</p>

<p> As far as I'm concerned, the death of DOS batch files has been greatly
exaggerated.  Running a batch file is still the only way to perform a series
of actions without the help of either third-party software or a macro-running
behemoth like Word, Excel or the Windows Scripting language.  Fortunately,
the GNU development tools - including bash - have been ported to MS-DOS and
Windows systems.  This page shows you how to hook bash into the Windows operating
system.  So you'll be familiar with bash once Linux breaks through ;-) </p><p>
Freddy Vulto

</p><h1 class="prelude">Page Updates</h1>



<table>
	<tbody><tr>
		<td class="pageUpdatesDate">Aug 28, 2001:  </td>
		<td>Added Cygwin configuration.</td>
	</tr>

	<tr>
		<td class="pageUpdatesDate">Aug 17, 2001:  </td>
		<td>Upgraded to DJGPP bash v2.04.  Added DJGPP versus Cygwin comparison.  Added NedStat counter.</td>
	</tr>

	<tr>
		<td class="pageUpdatesDate">Feb 26, 2001:  </td>
		<td>Updated personal FAQ.</td>
	</tr>

	<tr>
		<td class="pageUpdatesDate">Feb 18, 2001:  </td>
		<td>Usage of <code>HTML::EmbPerl</code> &amp; <code>HTML::Toc</code> to generate this page.</td>
	</tr>

	<tr>
		<td class="pageUpdatesDate">Nov 26, 2000:  </td>
		<td>Added <a href="#Vim">Vim</a> paragraph.  Updated bash configuration after downloading bash 2.03.  Modified paragraph layout.</td>
	</tr>

	<tr>
		<td class="pageUpdatesDate">Jul 18, 2000:  </td>
		<td>Changed
paragraph 'DOS-box &amp; Start;Run' to use 'App Paths' registry key.  Changed
DJGPP location in examples to D:\Programs\DjGpp.</td>
	</tr>

	<tr>
		<td class="pageUpdatesDate">Mar 25, 2000:  </td>
		<td>Moved page location.  Updated 'Shell to DOS' for Windows 98.  Added shell script 'Create .zip file'.</td>
	</tr>

	<tr>
		<td class="pageUpdatesDate">Apr 18, 1999:  </td>
		<td>Added section 'Shell Scripts'.</td>
	</tr>

	<tr>
		<td class="pageUpdatesDate">Apr 17, 1999:  </td>
		<td>Modified layout.  Updated section 'Shell Script Automation'.</td>
	</tr>
</tbody></table>


<h1 class="prelude">Table of Contents</h1>

<!-- Table of Contents generated by Perl - HTML::Toc -->
<ul class="toc_h1">
   <li><a href="#h-1">Where To Get Bash For Windows?</a>
   <ul class="toc_h2">
      <li><a href="#h-1.1">Cygwin</a>
      </li><li><a href="#h-1.2">DJGPP</a>
   </li></ul>
   </li><li><a href="#h-2">Configuring Bash</a>
   <ul class="toc_h2">
      <li><a href="#h-2.1">Cygwin</a>
      <ul class="toc_h3">
         <li><a href="#h-2.1.1">cygwin.bat</a>
         </li><li><a href="#h-2.1.2">_cygwin.bat</a>
         </li><li><a href="#h-2.1.3">/etc/profile</a>
         </li><li><a href="#h-2.1.4">~/.bashrc</a>
      </li></ul>
      </li><li><a href="#h-2.2">DJGPP</a>
      <ul class="toc_h3">
         <li><a href="#h-2.2.1">djgpp.bat</a>
         </li><li><a href="#h-2.2.2">_djgpp.bat</a>
         </li><li><a href="#h-2.2.3">~/_bashrc</a>
      </li></ul>
   </li></ul>
   </li><li><a href="#h-3">Configuring Windows</a>
   <ul class="toc_h2">
      <li><a href="#h-3.1">Start;Run</a>
      <ul class="toc_h3">
         <li><a href="#h-3.1.1">Cygwin</a>
         </li><li><a href="#h-3.1.2">DJGPP</a>
      </li></ul>
      </li><li><a href="#h-3.2">DOS-box</a>
      </li><li><a href="#h-3.3">Folder Popup Menu</a>
      <ul class="toc_h3">
         <li><a href="#h-3.3.1">Shell to Cygwin</a>
         </li><li><a href="#h-3.3.2">Shell to DJGPP</a>
         </li><li><a href="#h-3.3.3">Shell to DOS</a>
      </li></ul>
      </li><li><a href="#h-3.4">Shell Script Automation</a>
      <ul class="toc_h3">
         <li><a href="#h-3.4.1">Cygwin</a>
         </li><li><a href="#h-3.4.2">DJGPP</a>
      </li></ul>
   </li></ul>
   </li><li><a href="#h-4">Configuring Applications</a>
   <ul class="toc_h2">
      <li><a href="#h-4.1">Microsoft Developer Studio</a>
      </li><li><a href="#h-4.2">Vim (gVim)</a>
      <ul class="toc_h3">
         <li><a href="#h-4.2.1">Cygwin</a>
         </li><li><a href="#h-4.2.2">DJGPP</a>
      </li></ul>
   </li></ul>
   </li><li><a href="#h-5">Shell Script Examples</a>
   <ul class="toc_h2">
      <li><a href="#h-5.1">Create .zip file</a>
      </li><li><a href="#h-5.2">Detecting Operating System</a>
   </li></ul>
   </li><li><a href="#h-6">Personal FAQ</a>
   <ul class="toc_h2">
      <li><a href="#h-6.1">Create .tar.gz file</a>
      </li><li><a href="#h-6.2">Add installed package to Info</a>
      </li><li><a href="#h-6.3">Tilde expansion</a>
      </li><li><a href="#h-6.4">/usr/bin/pod2man: not found</a>
   </li></ul>
</li></ul>
<!-- End of generated Table of Contents -->



<h1 id="h-1">1  Where To Get Bash For Windows?</h1>

<p> Bash, short for GNU Bourne-Again SHell, is an sh-compatible command language
interpreter that executes commands read from the standard input or from a
file.  Bash is a part of the GNU software collection, utilizing this collection
to reach its full potential.  The GNU software is an essential part of the
Linux operating system, but is also available on the Windows operating system
as it's being ported by either <a href="http://www.cygwin.com/">Cygwin</a> or <a href="http://www.delorie.com/djgpp/">DJGPP</a>.
</p><p> Both the DJGPP and Cygwin project are offering a complete 32-bit
C/C++ development system, based on the GNU development tools.  The projects
differ in the way they handle the connection with the operating system and
in their licensing.  DGJPP compiles the applications as DPMI (32-bit DOS)
applications which can't access the Win32 API.  Software created with DJGPP's
libc is licensed under <a href="http://www.gnu.org/copyleft/lesser/html">GNU Lesser GPL</a>.
 Cygwin compiles applications as Win32 applications, utilizing a DLL which
acts as a UNIX emulation layer.  Software created with Cygwin's libc must
be distributed as <a href="http://www.gnu.org/copyleft/gpl.htm">Free Software</a>.
</p><p> Choose a distribution, or install both.  I suggest Cygwin because
its Win32 API access allows you to run even more useful GNU tools - like
wget and lynx - from within a DOS box.  See Cygwin as the successor of DJGPP. 
 </p><h2 id="h-1.1">1.1  Cygwin</h2>

The URI:
<ul>
<a href="http://www.cygwin.com/">http://www.cygwin.com/</a>
</ul>
<p>
will contain a link to a downloadable <code>setup.exe</code> which will
guide you through the process of downloading and installing Cygwin.  Take
care when installing everything: I had to clean up my harddisk to make room
for the 250 MB.   </p><h2 id="h-1.2">1.2  DJGPP</h2>
The URI: 
<ul>
<a href="http://www.delorie.com/djgpp/">http://www.delorie.com/djgpp/</a>
</ul>
<p> will contain all the links to download sites.  You can download sources
(these files end with 's'), binaries (these files end with 'b') as well as
documentation (these files end with 'd').  I haven't done any compilation
myself and just downloaded:  </p><ul><pre>bsh204b.zip</pre></ul>
<p>
which is basically bash.  To make full use of the bash shell scripting language, I also downloaded:
</p><ul><pre>fil40b.zip  (ported UNIX file utilities: ls, rm, touch, ln, etc.)
txt20b.zip  (ported UNIX text utilities: cat, sort, grep, wc, etc.)
</pre></ul>

<p>The version numbers of these zip files may have changed over time: just download the files with the highest number.

</p><h1 id="h-2">2  <a name="Configuring Bash">Configuring Bash</a></h1>

My current bash configurations can be downloaded here:
<ul>
Cygwin: <a href="http://home.wanadoo.nl/fvu/Projects/Bash/Zip/myCygwinConfiguration.zip">myCygwinConfiguration.zip</a> (1kb), Sep 8, 2001
<br>
DJGPP: <a href="http://home.wanadoo.nl/fvu/Projects/Bash/Zip/myDjgppConfiguration.zip">myDjgppConfiguration.zip</a> (1kb), Aug 28, 2001

</ul>

<h2 id="h-2.1">2.1  Cygwin</h2>

The bash shell runs on top of <code>command.com</code>.  In order to meet bash' rather large demand of environment space, it's often necessary to enlarge this space by specifying <code>/e:&lt;number&gt;</code> to <code>command.com</code>.  Although this can be done by putting <code>SHELL=</code> in <code>config.sys</code>, I dislike messing with <code>autoexec.bat</code> and <code>config.sys</code>, so I'm starting bash from a preliminary bath file <code>cygwin.bat</code> which enlarges environment space.  After the environment space is enlarged, a second batch file <code>_cygwin.bat</code> is called:
<ul><pre>D:\Programs\Cygwin\cygwin.bat -&gt; D:\Programs\Cygwin\_cygwin.bat -&gt; bash.exe
</pre></ul>

<h3 id="h-2.1.1">2.1.1  cygwin.bat</h3>

<code>cygwin.bat</code> contains the following commands:

<ul><pre>@echo off
REM --- cygwin.bat ------------------------------------------------------------
REM function: Shell command.com in order to start Cygwin.
REM args:     1-9: bash shell arguments

   REM Shell command.com with enough environment space and start _cygwin.bat
command.com /e:1024 /k D:\Programs\Cygwin\_cygwin.bat %1 %2 %3 %4 %5 %6 %7 %8 %9
</pre></ul>



<p>The option <code>/e:1024</code> gives me 4 times as much environment space as standard <code>command.com</code>
which has the environment space set to 256 bytes.  If you ever receive the
error "Out of environment space", you're free to increase this number.  The
option <code>/k _cygwin.bat</code> tells <code>command.com</code> to start the batch file <code>_djgpp.bat</code> immediately after <code>command.com</code> is initialized.  The arguments <code>%1</code>, <code>%2</code>, etc. will pass optional arguments (e.g. shell scripts) to bash.

</p><h3 id="h-2.1.2">2.1.2  _cygwin.bat</h3>

<ul><pre>@echo off
REM --- _cygwin.bat -----------------------------------------------------------
REM function: Start Cygwin
REM args:     - 1..9: bash shell arguments

D:\Programs\Cygwin\bin\bash --login -i %1 %2 %3 %4 %5 %6 %7 %8 %9
exit
</pre></ul>



<h3 id="h-2.1.3">2.1.3  /etc/profile</h3>

The file <code>/etc/profile</code> contains global - for all users - bash initialization commands.  Make sure to remove the <code>cd $HOME</code> command, otherwise the <a href="#Shell%20to%20Cygwin">Shell to Cygwin</a> won't go to the current directory.  My <code>/etc/profile</code> currently looks like this:

<ul><pre>#--- /etc/profile -------------------------------------------------------------
# function: Global bash initialization

PATH="/usr/local/bin:/usr/bin:/bin:$PATH"
unset DOSDRIVE
unset DOSDIR
unset TMPDIR
unset TMP

   # NOTE: I'm not using the 'id' command since this will return my Windows
   #       login name 'Freddy Vulto' with a space in it, which I'd like to 
   #       avoid.  See Cygwin FAQ.
   #USER="`id -un`"
USER=FVu

   # Set up USER's home directory
if [ -z "$HOME" ]; then
  HOME="/home/$USER"
fi

if [ ! -d "$HOME" ]; then
  mkdir -p "$HOME"
fi

export HOME USER

for i in /etc/profile.d/*.sh ; do
  if [ -f $i ]; then
    . $i
  fi
done

export MAKE_MODE=unix
export PS1='\[\033]0;\w\007
\033[32m\]\u@\h \[\033[33m\w\033[0m\]
$ '

   # Execute commands from ~/.bashrc if file exists
test -f ~/.bashrc &amp;&amp; . ~/.bashrc
</pre></ul>



<h3 id="h-2.1.4">2.1.4  ~/.bashrc</h3>

My <code>.bashrc</code> for Cygwin bash currently looks like this:

<ul><pre>   # Set vi editing mode
set -o vi
</pre></ul>



<h2 id="h-2.2">2.2  DJGPP</h2>

<p>The bash shell runs on top of <code>command.com</code>. In order to meet
bash' rather large demand of environment space, it is necessary to enlarge
this space by specifying /e:&lt;number&gt; to <code>command.com</code>.  Although this can be done by putting SHELL= in <code>config.sys</code>, I dislike messing with <code>autoexec.bat</code> and <code>config.sys</code>, so I'm starting bash from a preliminary batch file <code>djgpp.bat</code> which enlarges environment space.  After the environment space is enlarged, a second batch file <code>_djgpp.bat</code> is called.  This file sets a few environment variables - necessary for bash to start - and finally calls bash:
</p><ul><pre>D:\Programs\DjGpp\djgpp.bat -&gt; D:\Programs\DjGpp\_djgpp.bat -&gt; D:\Programs\DjGpp\bin\bash.exe
</pre></ul>

<h3 id="h-2.2.1">2.2.1  <b><i>djgpp.bat</i></b></h3>

<p>Bash.bat contains the following commands:

</p><ul><pre>@ECHO OFF
REM --- djgpp.bat -------------------------------------------------------------
REM function: Shell command.com in order to start bash

   REM Shell command.com with enough environment space and start _djgpp.bat
command.com /e:1024 /k D:\Programs\DjGpp\_djgpp.bat %1 %2 %3 %4 %5 %6 %7 %8 %9
</pre></ul>



<p>The option /e:1024 gives me 4 times as much environment space as standard <code>command.com</code>
which has the environment space set to 256 bytes.  If you ever receive the
error "Out of environment space", you're free to increase this number.  The
option <code>/k _djgpp.bat</code> tells command.com to start the batch file <code>_djgpp.bat</code> immediately after <code>command.com</code> is initialized.  The arguments <code>%1</code>, <code>%2</code>, etc. will pass optional arguments (e.g. shell scripts) to bash.

</p><h3 id="h-2.2.2">2.2.2  <a name="_djgpp.bat"><b><i>_djgpp.bat</i></b></a></h3>

<p>The file <code>_djgpp.bat</code> sets the environment settings, necessary for bash to start, and finally starts bash:

</p><ul><pre>@ECHO OFF
REM --- _djgpp.bat ------------------------------------------------------------
REM function: Setup environment for bash shell.  Call bash.exe
REM args:     - 1..9: bash shell arguments

   REM Set DjGpp home directory (~)
SET HOME=D:\Programs\DjGpp
   REM Set DjGpp environment file
SET DJGPP=%HOME%\djGpp.env
   REM Set path to DjGpp
SET PATH=.;%HOME%\Bin;C:\Win98\Command

   REM Start bash
%HOME%\bin\bash %1 %2 %3 %4 %5 %6 %7 %8 %9
exit
</pre></ul>

 

<h3 id="h-2.2.3">2.2.3  <b><i>~/_bashrc</i></b></h3>

<p>The file <code>_bashrc</code> may contain commands which are executed by bash on startup.  Mine looks currently like this:

</p><ul><pre>   # Show path to vi (vim.exe renamed)
alias vi=D:/Programs/Vim/Vim58/vi.exe
   # Display ls with colors
alias ls='ls --color'
   # Set prompt
PS1='${PWD}$'
   # Set command line editing mode to vi
set -o vi
   # Add current directory to path
PATH=".;$PATH"

   # Add either 'ActiveState' or 'DJGPP' perl directory to path

   # Does '~/bin/perl.exe' exists?
if [ ! -s "~/bin/perl.exe" ] ; then
   # No, '~/bin/perl.exe' doesn't exist;
      # Add path to ActivateState Perl
   PATH="$PATH;D:/Programs/Perl/Bin"
fi
   # Set temp directories
TMP='/tmp'
TEMP='/tmp'
</pre></ul>



<h1 id="h-3">3  Configuring Windows</h1>

<h2 id="h-3.1">3.1  Start;Run</h2>

<p>In order to be able to type either 'cygwin' or 'djgpp' from the Start;Run window, modify the registry like this:

</p><h3 id="h-3.1.1">3.1.1  Cygwin</h3>

<ul><pre>HKEY_LOCAL_MACHINE
|-Software
  |-Microsoft
    |-Windows
      |-CurrentVersion
        |-App Paths
          |-cygwin.exe     D:\Programs\Cygwin\cygwin.bat
</pre></ul>

<h3 id="h-3.1.2">3.1.2  DJGPP</h3>

<ul><pre>HKEY_LOCAL_MACHINE
|-Software
  |-Microsoft
    |-Windows
      |-CurrentVersion
        |-App Paths
          |-djgpp.exe     D:\Programs\DjGpp\djgpp.bat
</pre></ul>

<h2 id="h-3.2">3.2  DOS-box</h2>

<p>In order to be able to run 'bash' from the DOS-box, add a batch file to the properties of the DOS-box via {<u>P</u>roperties, tab 'Program', <u>B</u>atch file}, and let this batch file add the bash directory to the path:
</p><ul><pre>PATH=D:\Programs\DjGpp;%PATH%
</pre></ul>

<h2 id="h-3.3">3.3  Folder Popup Menu</h2>

<p>It would be nice if we could jumpstart bash from a specific folder name
by selecting so from the folder's right-mousebutton-menu.  Fortunately, Windows
9x offers us the capabilities.  Add the following keys to the registry.  <a name="Shell to Cygwin"><h3 id="h-3.3.1">3.3.1  Shell to Cygwin</h3></a>

</p><ul><pre>HKEY_CLASSES_ROOT
|-Folder
  |-shell
    |-Shell to Cygwin   (Default) = "Shell to Cyg&amp;win"
      |-command         "D:\Programs\Cygwin\cygwin.bat"
</pre></ul>

<h3 id="h-3.3.2">3.3.2  Shell to DJGPP</h3>

<ul><pre>HKEY_CLASSES_ROOT
|-Folder
  |-shell
    |-Shell to DJGPP   (Default) = "Shell to DJ&amp;GPP"
      |-command        "D:\Programs\DjGpp\djgpp.bat"
</pre></ul>

<h3 id="h-3.3.3">3.3.3  Shell to DOS</h3>

<p>And while your at it:
</p><ul><pre>    |-Shell to DOS
      |-command        "C:\command.com /k cd %1"  (Windows 95)
                       "C:\command.com"           (Windows 98)
                       "C:\WinNt\cmd.exe"         (Windows NT)
</pre></ul>

<h2 id="h-3.4">3.4  Shell Script Automation</h2>

<p>It would be nice if shell scripts could be run by doubleclicking on them
or by specifying them via {Start; Run}.  Also it would be convenient if shell
scripts could be editted by selecting so from the popup menu.  These are
the necessary registry items to accomplish all this, choose either Cygwin
or DJGPP:  </p><h3 id="h-3.4.1">3.4.1  Cygwin</h3>

<ul><pre>HKEY_CLASSES_ROOT
|-.sh                  "Bash.Shell.Script"
:
|- Bash.Shell.Script
  |-shell
    |-edit             "&amp;Edit"
    | |-command        "notepad.exe "%1""
    |-open             "&amp;Run"
      |-command        "D:\Programs\Cygwin\cygwin.bat "%1" "%2" "%3" "%4" "%5" "%6" "%7" "%8" "%9""
</pre></ul>

<h3 id="h-3.4.2">3.4.2  DJGPP</h3>

<ul><pre>HKEY_CLASSES_ROOT
|-.sh                  "Bash.Shell.Script"
:
|- Bash.Shell.Script
  |-shell
    |-edit             "&amp;Edit"
    | |-command        "notepad.exe "%1""
    |-open             "&amp;Run"
      |-command        "D:\Programs\DjGpp\djgpp.bat "%1" "%2" "%3" "%4" "%5" "%6" "%7" "%8" "%9""
</pre></ul>

<h1 id="h-4">4  Configuring Applications</h1>

<h2 id="h-4.1">4.1  Microsoft Developer Studio</h2>

<p>The C++ IDE of Microsoft's Developer Studio offers you the ability to
execute 'Custom Build', 'Pre-link step' or 'Post-build step' commands.  These
can be bash commands as well.  To show the standard output of bash in the
'Output' window of DevStudio, you have to redirect normal output to stderr,
using redirection symbol '&gt;&amp;2'.  For example, suppose you want to
execute the script <code>C:\hello.sh</code> as a Post-build step:
</p><ul><pre>#!/bin/sh
#--- hello.sh ---------------------

echo "Hello World!" &gt;&amp;2
</pre></ul>

<p>Start Developer Studio, select {<u>P</u>roject;<u>S</u>ettings}, go to the rightmost tab 'Post-build step' and type as 'Post-build command(s)':
</p><ul><pre>D:\Programs\DjGpp\djgpp.bat C:\hello.sh
</pre></ul>

<a name="Vim"><h2 id="h-4.2">4.2  Vim (gVim)</h2></a>

<p>To set bash as the default shell of your GUI Vim, put the commands underneath in your <code>_gvimrc</code> file.  Now you can type <code>:sh[ell]</code> to invoke bash, or <code>:r !ls</code> to insert the contents of the current directory, or <code>:make</code> to make your project.  

</p><h3 id="h-4.2.1">4.2.1  Cygwin</h3>

<ul><pre>   " Set shell to Cygwin bash
set shell=D:\\Programs\\Cygwin\\cygwin.bat
   " Shell arguments; -c: argument
set shellcmdflag=-c
   " Shell redirect; copy stderr to stdout
set shellredir=&gt;%s\ 2&gt;&amp;1
   " Shell pipe; copy stderr to stdout
set shellpipe=2&gt;&amp;1\|\ tee
   " Shell quote; embed command within quotes
set shellxquote=\"
</pre></ul>

<h3 id="h-4.2.2">4.2.2  DJGPP</h3>

<ul><pre>set shell=D:\\Programs\\DjGpp\\djgpp.bat
set shellcmdflag=-c
set shellredir=&gt;%s\ 2&gt;&amp;1
set shellxquote=\"
</pre></ul>

<h1 id="h-5">5  Shell Script Examples</h1>

<h2 id="h-5.1">5.1  Create .zip file</h2>

<p>The following shell script creates a .zip file using the PKZIP command line utility, version 2.50, from <a href="http://www.pkware.com/">PKWARE Inc</a>.</p>
<ul><pre>#!/bin/sh
# --- makeZip.sh --------------------------------------------------------------
# function: Create archive file containing the contents of the MsxC directory.
# credits:  FVu, Mar-2000

   # Name zip destination file
ls_ZipFile="../Zip/msxC-1.20.zip"

   # Does zip file already exist?
if [ -e ${ls_ZipFile} ] ; then
   # Yes, zip file already exists;
      # Delete it
   rm $ls_ZipFile
fi

   # Zip
pkzip $ls_ZipFile -add "../*" | tail --lines=+6
pkzip $ls_ZipFile -add -dir=specify "../Batch/*" | tail --lines=+6
pkzip $ls_ZipFile -add -dir=specify "../Include/*" | tail --lines=+6
pkzip $ls_ZipFile -add -dir=specify "../Sample/*" | tail --lines=+6
pkzip $ls_ZipFile -add -dir=specify "../Src/*" | tail --lines=+6
</pre></ul>

<h2 id="h-5.2">5.2  Detecting Operating System</h2>

<p>(credits: <a href="mailto:Pontus.Goffe@edt.ericsson.se">Pontus Goffe</a>)<br> This shell script determines the current operating system (Windows 95 or Windows NT) bash is running from:
</p><ul><pre>THISOS="Unknown"; export THISOS;
WINACTIVE="NO"; export WINACTIVE
if test -s $windir/command.com; then
   $windir/command.com "/c" "ver" | grep "Windows 95" &gt; nul
   if test !$?; then
      THISOS="Windows_95"; export THISOS;
   fi
   if test -s $windir/command/mem.exe; then
      $windir/command/mem.exe /c | grep "WIN" &gt; nul
      if test !$?; then WINACTIVE="YES";
      else WINACTIVE="NO";
      fi
      export WINACTIVE
   fi
fi
if test -s $SYSTEMROOT/system32/cmd.exe; then
   $SYSTEMROOT/system32/command.com /c ver | grep "Windows NT" &gt; nul
   if test !$?; then
      THISOS="Windows_NT"; export THISOS;
      WINACTIVE="YES"; export WINACTIVE;
   fi
fi
if test $THISOS = "Windows_95"; then
   if test $WINACTIVE = "YES"; then
      echo Welcome to bash under $THISOS, Windows is running
   else
      echo Welcome to bash under $THISOS, Windows is not running
   fi
elif test $THISOS = "Windows_NT"; then
   echo Welcome to bash under $THISOS
else
   echo Welcome to bash under unknown OS
fi
</pre></ul>

<h1 id="h-6">6  Personal FAQ</h1>

<h2 id="h-6.1">6.1  Create .tar.gz file</h2>

<p>To create a <code>tar</code> archive file, compressed with <code>gzip</code>, I use the following command:
</p><ul><pre>tar --create --gzip t.txt --file=t.tar.gz
</pre></ul>
<p>or for short:</p>
<ul><pre>tar -cz t.txt &gt; t.tar.gz
</pre></ul>

<h2 id="h-6.2">6.2  Add installed package to Info</h2>
<p>After installing a new package x, use the following command to add the
info files of the x package to the info main menu:</p>
<ul><pre>install-info x.info dir
</pre></ul>

<h2 id="h-6.3">6.3  Tilde expansion</h2>
<p>The following test didn't work:
</p><ul><pre>if [ -e "~/_djgpp.bat" ] ; then
   echo Yes;
fi
</pre></ul>
because for tilde expansion the string has to be unquoted:
<ul><pre>if [ -e ~/_djgpp.bat ] ; then
   echo Yes;
fi
</pre></ul>
or even better, as the $HOME directory was what I wanted:
<ul><pre>if [ -e $HOME/_djgpp.bat ] ; then
   echo Yes;
fi
</pre></ul>

See chapter 'Tilde expansion' in bash documentation for more information.

<h2 id="h-6.4">6.4  /usr/bin/pod2man: not found</h2>
<p>
Using the <code>Pod::Usage</code> function <code>pod2usage()</code> gave me the error:
</p><ul><pre>/usr/bin/pod2man: not found
</pre></ul><p></p>
<p>
This happened after I'd put <code>CYGWIN=ntea</code> into my <code>.bashrc</code> for testing purposes.  Removing <code>CYGWIN=ntea</code> from my <code>.bashrc</code> made <code>pod2man</code> work all right again.</p>

<br>
<br>
<br>
<div class="footerMenu"><a href="http://fvu.myweb.nl/">Home</a></div>
<hr>
<div class="footer">This document was last revised: Sep 8, 2001
<br>
<a href="mailto:fvu@fvu.myweb.nl">fvu@fvu.myweb.nl</a>
<br>
<!-- Begin Nedstat Basic code -->
<!-- Title: Bash & Windows -->
<!-- URL: http://www.fvu.myweb.nl/Projects/Bash/Web/bash.htm -->
<script language="JavaScript" src="bash_files/basic.js">
</script>
<script language="JavaScript">
<!--
  nedstatbasic("ABGFSAUCAckZkFxto6Tg/Kmw8lyA", 0);
// -->
</script><a target="_blank" href="http://v1.nedstatbasic.net/stats?ABGFSAUCAckZkFxto6Tg/Kmw8lyA"><img src="bash_files/n.gif" border="0" width="18" height="18" alt="Nedstat Basic - Free web site statistics"></a>
<noscript>
<a target="_blank" href="http://v1.nedstatbasic.net/stats?ABGFSAUCAckZkFxto6Tg/Kmw8lyA"><img 
src="http://m1.nedstatbasic.net/n?id=ABGFSAUCAckZkFxto6Tg/Kmw8lyA"
border="0" nosave width="18" height="18"></a>
</noscript>
<!-- End Nedstat Basic code -->

</div>

</body></html>